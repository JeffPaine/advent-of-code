package main

import "testing"

func TestValue(t *testing.T) {
	tests := []struct {
		rows []string
		want int
	}{
		{
			[]string{
				"#.##..##.",
				"..#.##.#.",
				"##......#",
				"##......#",
				"..#.##.#.",
				"..##..##.",
				"#.#.##.#.",
			},
			5,
		},
		{
			[]string{
				"#...##..#",
				"#....#..#",
				"..##..###",
				"#####.##.",
				"#####.##.",
				"..##..###",
				"#....#..#",
			},
			400,
		},
		{
			[]string{
				"#.##....##.#.",
				"#.##....##.#.",
				".#.#....#.#.#",
				".###....###..",
				"#.#.####.#.#.",
				".####...###.#",
				"#..######..#.",
				"..#..##..#..#",
				".#........#.#",
			},
			100,
		},
		{
			[]string{
				"###......####",
				"..##....##...",
				".#.######.#..",
				"#.###..###.##",
				"#.##.....#.##",
				".#.##..##.#..",
				".##......##..",
			},
			12,
		},
		{
			[]string{
				"...#.#.##.#.#....",
				"..###..##..###...",
				"#..##.#..#.##..##",
				"#.###.####.###.#.",
				"####..#..#..####.",
				"####.##..##.#####",
				"#..#.##..##.#..#.",
				"..####.#######..#",
				"......####......#",
				"...#........#...#",
				"...#........#...#",
			},
			1000,
		},
		{
			[]string{
				"#..###..###",
				"#..#.#..#.#",
				"..###.##.##",
				"....#....#.",
				".....####..",
				"###.#.##.#.",
				"#.#####.###",
				"##.###..###",
				"#...#....#.",
				"#..#.####.#",
				"#..#.####.#",
			},
			1000,
		},
		{
			[]string{
				"##..######..#",
				"###.##..##.##",
				"###..####..##",
				"...#.#..#.#..",
				"..##.#..#.##.",
				"###.#.##.#.##",
				"##....##....#",
				"####.####.###",
				"...########..",
				"..#.#....#.#.",
				"###..####..##",
				"..##......##.",
				"###.#.##.#.##",
				"####..##..###",
				"#..#......#..",
				"...##.##.##..",
				"###.##..##.##",
			},
			7,
		},
		{
			[]string{
				"####....#...#",
				"###.....#...#",
				".###.#.###.##",
				"##.#...##.#.#",
				"#.##.#.#.###.",
				"#.#.#..##..#.",
				"##..##..#...#",
				"###...###.#..",
				"###...###.#..",
				"##..##..#...#",
				"#.#.#..##..#.",
			},
			800,
		},
	}
	for _, test := range tests {
		if got := valueFirst(test.rows); got != test.want {
			t.Errorf("value(rows) = %v, want: %v", got, test.want)
		}
	}
}

func TestSmudgeValue(t *testing.T) {
	tests := []struct {
		rows []string
		want int
	}{
		{
			[]string{
				"#.##..##.",
				"..#.##.#.",
				"##......#",
				"##......#",
				"..#.##.#.",
				"..##..##.",
				"#.#.##.#.",
			},
			300,
		},
		{
			[]string{
				"#...##..#",
				"#....#..#",
				"..##..###",
				"#####.##.",
				"#####.##.",
				"..##..###",
				"#....#..#",
			},
			100,
		},
	}
	for _, test := range tests {
		if got := smudgeValue(test.rows); got != test.want {
			t.Errorf("smudgeValue(rows) = %v, want: %v", got, test.want)
		}
	}
}
